#!/bin/sh
# vi: set ft=sh expandtab shiftwidth=4 tabstop=4:
set -e
set -u

toplevel_directory="$(git rev-parse --show-cdup)"
[ -n "$toplevel_directory" ] && { echo "please run from the toplevel directory"; exit 1; }

call() { echo "$@" ; "$@" ; }

do_clone() {
	test -d .git_externals || return 1
	module="$(echo $remote_url | sed -e 's,\(.*\)\(/trunk\|/branch.*\|/tag.*\),\1,')"
	branch="$(echo $remote_url | sed -e 's,\(.*\)\(/trunk\|/branch.*\|/tag.*\),\2,' -e 's,^/,,')"
	if test "$branch" = "$remote_url" ; then
		branch=""
	fi
 	(
		cd .git_externals
		if test -d "$local_directory" ; then
			(
				cd -- "$local_directory"
				call git svn fetch --all
			)
		else
			tags="tags"
			brch="branches"
			branchpath="$(echo $branch|cut -f1 -d/)"
			echo $tags | grep -- "$branchpath" >/dev/null 2>&1 && tags="$branchpath"
			echo $brch | grep -- "$branchpath" >/dev/null 2>&1 && brch="$branchpath"

			if test "$module" = "$remote_url" ; then
				# URL does not contains any trunk, branches or tags part, so we dont need
				# additional options for git-svn
				call git svn clone "$revision" "$module" "$local_directory"
			else
				call git svn clone "$revision" "$module" -T trunk -b "$brch" -t "$tags" "$local_directory"
			fi

		fi
		(
			branch="$(echo $branch | sed 's,/$,,')"
			if test -n "$branch" ; then
				cd -- "$local_directory"
				call git reset --hard "$branch"
			fi
		)
	)
}

do_link() {
	dir="$1"
	base="$(dirname -- "$dir")"
	(
		mkdir -p -- "$base"
		cd -- "$base"
		rel="$(git rev-parse --show-cdup)"
		ln -sf "${rel}.git_externals/$dir"
	)
}

do_excludes() {
	dir="$1"
	git_excludes_path=.git/info/exclude
	if ! grep -q '^.git_externals$' "$git_excludes_path" ; then
		echo .git_externals >> "$git_excludes_path"
	fi

	if ! grep -q '^'"$dir"'$' "$git_excludes_path" ; then
		echo "$dir" >> "$git_excludes_path"
	fi
}

is_excluded() {
    local result=0
    if test -f .git_externals_exclude ; then
        matches="$(grep -v "^#" .git_externals_exclude | grep "^/$1$" | wc -l)"
        if test "$matches" -gt 0 ; then
            return 1
        fi
    fi
    return 0
}


git svn show-externals|grep -vE '#|^$' \
	| sed -e 's/\(-r\)[ ]*\([0-9]\{1,\}\)/\1\2/' \
	| while read -a words ; do

    [ -z "${words[*]}" ] && continue

    local_directory="$(echo ${words[0]}|sed 's,^/,,')"
    revision=""
    remote_url="${words[1]}"

    check_excluded=0
    is_excluded "$local_directory" || check_excluded=1

    if test $check_excluded -eq 0 ; then
        if test -n "${words[2]}" ; then
            revision="${words[1]}"
            remote_url="${words[2]}"
        fi

        if test -n "$USE_SSH" ; then
            echo "Rewriting url to use SVN+SSH."
            shopt -s extglob
            remote_url="${remote_url/+(http|https)/svn+ssh}"
        fi

	# not test -n "$remote_url" || continue?
	# do we really want 
        test -z "${remote_url}" && continue

	# why export??
        export local_directory revision remote_url

        echo "$local_directory -> $remote_url"

        dir=`dirname $local_directory`
        [ -d ".git_externals/$dir" ] || mkdir -p ".git_externals/$dir"

        do_clone "$revision" "$remote_url" "$local_directory" # we have set -e || exit
        do_link "$local_directory"
        do_excludes "$local_directory"
    fi

done

